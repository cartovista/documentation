/* 
 * CartoVista.Server.API.v1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing GridLayerApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class GridLayerApiTests
    {
        private GridLayerApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new GridLayerApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of GridLayerApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' GridLayerApi
            //Assert.IsInstanceOfType(typeof(GridLayerApi), instance, "instance is a GridLayerApi");
        }

        
        /// <summary>
        /// Test GridLayerAddGridSource
        /// </summary>
        [Test]
        public void GridLayerAddGridSourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //int? bandNumber = null;
            //System.IO.Stream _file = null;
            //var response = instance.GridLayerAddGridSource(gridLayerId, bandNumber, _file);
            //Assert.IsInstanceOf<GridSource> (response, "response is GridSource");
        }
        
        /// <summary>
        /// Test GridLayerCreateGridLayer
        /// </summary>
        [Test]
        public void GridLayerCreateGridLayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //GridLayerCreateParameters createParameters = null;
            //var response = instance.GridLayerCreateGridLayer(createParameters);
            //Assert.IsInstanceOf<GridLayer> (response, "response is GridLayer");
        }
        
        /// <summary>
        /// Test GridLayerDeleteGridLayer
        /// </summary>
        [Test]
        public void GridLayerDeleteGridLayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //instance.GridLayerDeleteGridLayer(gridLayerId);
            
        }
        
        /// <summary>
        /// Test GridLayerDeleteGridSource
        /// </summary>
        [Test]
        public void GridLayerDeleteGridSourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //string gridSourceId = null;
            //instance.GridLayerDeleteGridSource(gridLayerId, gridSourceId);
            
        }
        
        /// <summary>
        /// Test GridLayerGetData
        /// </summary>
        [Test]
        public void GridLayerGetDataTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //string gridSourceId = null;
            //var response = instance.GridLayerGetData(gridLayerId, gridSourceId);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GridLayerGetGridLayerById
        /// </summary>
        [Test]
        public void GridLayerGetGridLayerByIdTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //var response = instance.GridLayerGetGridLayerById(gridLayerId);
            //Assert.IsInstanceOf<GridLayer> (response, "response is GridLayer");
        }
        
        /// <summary>
        /// Test GridLayerGetGridLayers
        /// </summary>
        [Test]
        public void GridLayerGetGridLayersTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //var response = instance.GridLayerGetGridLayers();
            //Assert.IsInstanceOf<List<GridLayer>> (response, "response is List<GridLayer>");
        }
        
        /// <summary>
        /// Test GridLayerGetGridSource
        /// </summary>
        [Test]
        public void GridLayerGetGridSourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //string gridSourceId = null;
            //var response = instance.GridLayerGetGridSource(gridLayerId, gridSourceId);
            //Assert.IsInstanceOf<GridSource> (response, "response is GridSource");
        }
        
        /// <summary>
        /// Test GridLayerGetGridSourcesForGridLayer
        /// </summary>
        [Test]
        public void GridLayerGetGridSourcesForGridLayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //var response = instance.GridLayerGetGridSourcesForGridLayer(gridLayerId);
            //Assert.IsInstanceOf<List<GridSource>> (response, "response is List<GridSource>");
        }
        
        /// <summary>
        /// Test GridLayerGetMapsByGridLayer
        /// </summary>
        [Test]
        public void GridLayerGetMapsByGridLayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //var response = instance.GridLayerGetMapsByGridLayer(gridLayerId);
            //Assert.IsInstanceOf<List<MapDTO>> (response, "response is List<MapDTO>");
        }
        
        /// <summary>
        /// Test GridLayerRender
        /// </summary>
        [Test]
        public void GridLayerRenderTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //string gridSourceId = null;
            //GridSourceRenderParameter param = null;
            //var response = instance.GridLayerRender(gridLayerId, gridSourceId, param);
            //Assert.IsInstanceOf<Object> (response, "response is Object");
        }
        
        /// <summary>
        /// Test GridLayerUpdateGridLayer
        /// </summary>
        [Test]
        public void GridLayerUpdateGridLayerTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //GridLayerUpdateParameters updateParameters = null;
            //var response = instance.GridLayerUpdateGridLayer(gridLayerId, updateParameters);
            //Assert.IsInstanceOf<GridLayer> (response, "response is GridLayer");
        }
        
        /// <summary>
        /// Test GridLayerUpdateGridSource
        /// </summary>
        [Test]
        public void GridLayerUpdateGridSourceTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //string gridSourceId = null;
            //GridSourceUpdateParameters updateParameters = null;
            //var response = instance.GridLayerUpdateGridSource(gridLayerId, gridSourceId, updateParameters);
            //Assert.IsInstanceOf<GridSource> (response, "response is GridSource");
        }
        
        /// <summary>
        /// Test GridLayerUpdateGridSourceGeotiff
        /// </summary>
        [Test]
        public void GridLayerUpdateGridSourceGeotiffTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string gridLayerId = null;
            //string gridSourceId = null;
            //int? bandNumber = null;
            //System.IO.Stream _file = null;
            //var response = instance.GridLayerUpdateGridSourceGeotiff(gridLayerId, gridSourceId, bandNumber, _file);
            //Assert.IsInstanceOf<GridSource> (response, "response is GridSource");
        }
        
    }

}
