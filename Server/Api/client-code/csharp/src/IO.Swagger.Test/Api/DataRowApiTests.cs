/* 
 * CartoVista.Server.API.v1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using IO.Swagger.Client;
using IO.Swagger.Api;
using IO.Swagger.Model;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DataRowApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class DataRowApiTests
    {
        private DataRowApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new DataRowApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DataRowApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            // TODO uncomment below to test 'IsInstanceOfType' DataRowApi
            //Assert.IsInstanceOfType(typeof(DataRowApi), instance, "instance is a DataRowApi");
        }

        
        /// <summary>
        /// Test DataRowCreateDataRows
        /// </summary>
        [Test]
        public void DataRowCreateDataRowsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataTableIdentifier = null;
            //List<DataRowCreateParameter> param = null;
            //var response = instance.DataRowCreateDataRows(dataTableIdentifier, param);
            //Assert.IsInstanceOf<ApiInsertReport> (response, "response is ApiInsertReport");
        }
        
        /// <summary>
        /// Test DataRowCreateUpdateDataRows
        /// </summary>
        [Test]
        public void DataRowCreateUpdateDataRowsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataTableIdentifier = null;
            //List<DataRowCreateParameter> param = null;
            //var response = instance.DataRowCreateUpdateDataRows(dataTableIdentifier, param);
            //Assert.IsInstanceOf<ApiCreateUpdateReport> (response, "response is ApiCreateUpdateReport");
        }
        
        /// <summary>
        /// Test DataRowDeleteDatarow
        /// </summary>
        [Test]
        public void DataRowDeleteDatarowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataTableIdentifier = null;
            //string dataRowIdentifier = null;
            //instance.DataRowDeleteDatarow(dataTableIdentifier, dataRowIdentifier);
            
        }
        
        /// <summary>
        /// Test DataRowDeleteDatarows
        /// </summary>
        [Test]
        public void DataRowDeleteDatarowsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataTableIdentifier = null;
            //List<string> dataRowIdentifiers = null;
            //instance.DataRowDeleteDatarows(dataTableIdentifier, dataRowIdentifiers);
            
        }
        
        /// <summary>
        /// Test DataRowGetDataRow
        /// </summary>
        [Test]
        public void DataRowGetDataRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataTableIdentifier = null;
            //string dataRowIdentifier = null;
            //var response = instance.DataRowGetDataRow(dataTableIdentifier, dataRowIdentifier);
            //Assert.IsInstanceOf<DataRow> (response, "response is DataRow");
        }
        
        /// <summary>
        /// Test DataRowGetDataRows
        /// </summary>
        [Test]
        public void DataRowGetDataRowsTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataTableIdentifier = null;
            //DataRowsGetParameters param = null;
            //var response = instance.DataRowGetDataRows(dataTableIdentifier, param);
            //Assert.IsInstanceOf<List<DataRow>> (response, "response is List<DataRow>");
        }
        
        /// <summary>
        /// Test DataRowUpdateDataRow
        /// </summary>
        [Test]
        public void DataRowUpdateDataRowTest()
        {
            // TODO uncomment below to test the method and replace null with proper value
            //string dataTableIdentifier = null;
            //string dataRowIdentifier = null;
            //DataRowUpdateParameter param = null;
            //var response = instance.DataRowUpdateDataRow(dataTableIdentifier, dataRowIdentifier, param);
            //Assert.IsInstanceOf<DataRow> (response, "response is DataRow");
        }
        
    }

}
