/* 
 * CartoVista.Server.API.v1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing View
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ViewTests
    {
        // TODO uncomment below to declare an instance variable for View
        //private View instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of View
            //instance = new View();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of View
        /// </summary>
        [Test]
        public void ViewInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" View
            //Assert.IsInstanceOfType<View> (instance, "variable 'instance' is a View");
        }


        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Title'
        /// </summary>
        [Test]
        public void TitleTest()
        {
            // TODO unit test for the property 'Title'
        }
        /// <summary>
        /// Test the property 'LayerId'
        /// </summary>
        [Test]
        public void LayerIdTest()
        {
            // TODO unit test for the property 'LayerId'
        }
        /// <summary>
        /// Test the property 'RecordCount'
        /// </summary>
        [Test]
        public void RecordCountTest()
        {
            // TODO unit test for the property 'RecordCount'
        }
        /// <summary>
        /// Test the property 'Type'
        /// </summary>
        [Test]
        public void TypeTest()
        {
            // TODO unit test for the property 'Type'
        }
        /// <summary>
        /// Test the property 'Expression'
        /// </summary>
        [Test]
        public void ExpressionTest()
        {
            // TODO unit test for the property 'Expression'
        }
        /// <summary>
        /// Test the property 'ColumnId'
        /// </summary>
        [Test]
        public void ColumnIdTest()
        {
            // TODO unit test for the property 'ColumnId'
        }
        /// <summary>
        /// Test the property 'ColumnName'
        /// </summary>
        [Test]
        public void ColumnNameTest()
        {
            // TODO unit test for the property 'ColumnName'
        }
        /// <summary>
        /// Test the property 'ColumnType'
        /// </summary>
        [Test]
        public void ColumnTypeTest()
        {
            // TODO unit test for the property 'ColumnType'
        }
        /// <summary>
        /// Test the property 'CreationTime'
        /// </summary>
        [Test]
        public void CreationTimeTest()
        {
            // TODO unit test for the property 'CreationTime'
        }
        /// <summary>
        /// Test the property 'ModifiedTime'
        /// </summary>
        [Test]
        public void ModifiedTimeTest()
        {
            // TODO unit test for the property 'ModifiedTime'
        }
        /// <summary>
        /// Test the property 'Permissions'
        /// </summary>
        [Test]
        public void PermissionsTest()
        {
            // TODO unit test for the property 'Permissions'
        }
        /// <summary>
        /// Test the property 'CurrentUserHasModifyPermission'
        /// </summary>
        [Test]
        public void CurrentUserHasModifyPermissionTest()
        {
            // TODO unit test for the property 'CurrentUserHasModifyPermission'
        }

    }

}
