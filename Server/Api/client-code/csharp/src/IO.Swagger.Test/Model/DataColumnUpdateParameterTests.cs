/* 
 * CartoVista.Server.API.v1
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */


using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using IO.Swagger.Api;
using IO.Swagger.Model;
using IO.Swagger.Client;
using System.Reflection;
using Newtonsoft.Json;

namespace IO.Swagger.Test
{
    /// <summary>
    ///  Class for testing DataColumnUpdateParameter
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class DataColumnUpdateParameterTests
    {
        // TODO uncomment below to declare an instance variable for DataColumnUpdateParameter
        //private DataColumnUpdateParameter instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            // TODO uncomment below to create an instance of DataColumnUpdateParameter
            //instance = new DataColumnUpdateParameter();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of DataColumnUpdateParameter
        /// </summary>
        [Test]
        public void DataColumnUpdateParameterInstanceTest()
        {
            // TODO uncomment below to test "IsInstanceOfType" DataColumnUpdateParameter
            //Assert.IsInstanceOfType<DataColumnUpdateParameter> (instance, "variable 'instance' is a DataColumnUpdateParameter");
        }


        /// <summary>
        /// Test the property 'CartoVistaDataType'
        /// </summary>
        [Test]
        public void CartoVistaDataTypeTest()
        {
            // TODO unit test for the property 'CartoVistaDataType'
        }
        /// <summary>
        /// Test the property 'Name'
        /// </summary>
        [Test]
        public void NameTest()
        {
            // TODO unit test for the property 'Name'
        }
        /// <summary>
        /// Test the property 'Description'
        /// </summary>
        [Test]
        public void DescriptionTest()
        {
            // TODO unit test for the property 'Description'
        }
        /// <summary>
        /// Test the property 'Metadata'
        /// </summary>
        [Test]
        public void MetadataTest()
        {
            // TODO unit test for the property 'Metadata'
        }
        /// <summary>
        /// Test the property 'Units'
        /// </summary>
        [Test]
        public void UnitsTest()
        {
            // TODO unit test for the property 'Units'
        }
        /// <summary>
        /// Test the property 'AggregationType'
        /// </summary>
        [Test]
        public void AggregationTypeTest()
        {
            // TODO unit test for the property 'AggregationType'
        }
        /// <summary>
        /// Test the property 'Mappable'
        /// </summary>
        [Test]
        public void MappableTest()
        {
            // TODO unit test for the property 'Mappable'
        }
        /// <summary>
        /// Test the property 'Precision'
        /// </summary>
        [Test]
        public void PrecisionTest()
        {
            // TODO unit test for the property 'Precision'
        }
        /// <summary>
        /// Test the property 'RoundToPrecision'
        /// </summary>
        [Test]
        public void RoundToPrecisionTest()
        {
            // TODO unit test for the property 'RoundToPrecision'
        }
        /// <summary>
        /// Test the property 'TimeStamp'
        /// </summary>
        [Test]
        public void TimeStampTest()
        {
            // TODO unit test for the property 'TimeStamp'
        }
        /// <summary>
        /// Test the property 'TimeStampAccuracy'
        /// </summary>
        [Test]
        public void TimeStampAccuracyTest()
        {
            // TODO unit test for the property 'TimeStampAccuracy'
        }
        /// <summary>
        /// Test the property 'NotAvailableValues'
        /// </summary>
        [Test]
        public void NotAvailableValuesTest()
        {
            // TODO unit test for the property 'NotAvailableValues'
        }
        /// <summary>
        /// Test the property 'ValueToConvert'
        /// </summary>
        [Test]
        public void ValueToConvertTest()
        {
            // TODO unit test for the property 'ValueToConvert'
        }

    }

}
