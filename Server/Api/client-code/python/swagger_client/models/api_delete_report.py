# coding: utf-8

"""
    CartoVista.Server.API.v1

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class ApiDeleteReport(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'delete_count': 'int',
        'deleted_identifiers': 'list[str]',
        'error_count': 'int',
        'error_details': 'list[ErrorDetail]'
    }

    attribute_map = {
        'delete_count': 'DeleteCount',
        'deleted_identifiers': 'DeletedIdentifiers',
        'error_count': 'ErrorCount',
        'error_details': 'ErrorDetails'
    }

    def __init__(self, delete_count=None, deleted_identifiers=None, error_count=None, error_details=None):  # noqa: E501
        """ApiDeleteReport - a model defined in Swagger"""  # noqa: E501

        self._delete_count = None
        self._deleted_identifiers = None
        self._error_count = None
        self._error_details = None
        self.discriminator = None

        if delete_count is not None:
            self.delete_count = delete_count
        if deleted_identifiers is not None:
            self.deleted_identifiers = deleted_identifiers
        if error_count is not None:
            self.error_count = error_count
        if error_details is not None:
            self.error_details = error_details

    @property
    def delete_count(self):
        """Gets the delete_count of this ApiDeleteReport.  # noqa: E501


        :return: The delete_count of this ApiDeleteReport.  # noqa: E501
        :rtype: int
        """
        return self._delete_count

    @delete_count.setter
    def delete_count(self, delete_count):
        """Sets the delete_count of this ApiDeleteReport.


        :param delete_count: The delete_count of this ApiDeleteReport.  # noqa: E501
        :type: int
        """

        self._delete_count = delete_count

    @property
    def deleted_identifiers(self):
        """Gets the deleted_identifiers of this ApiDeleteReport.  # noqa: E501


        :return: The deleted_identifiers of this ApiDeleteReport.  # noqa: E501
        :rtype: list[str]
        """
        return self._deleted_identifiers

    @deleted_identifiers.setter
    def deleted_identifiers(self, deleted_identifiers):
        """Sets the deleted_identifiers of this ApiDeleteReport.


        :param deleted_identifiers: The deleted_identifiers of this ApiDeleteReport.  # noqa: E501
        :type: list[str]
        """

        self._deleted_identifiers = deleted_identifiers

    @property
    def error_count(self):
        """Gets the error_count of this ApiDeleteReport.  # noqa: E501


        :return: The error_count of this ApiDeleteReport.  # noqa: E501
        :rtype: int
        """
        return self._error_count

    @error_count.setter
    def error_count(self, error_count):
        """Sets the error_count of this ApiDeleteReport.


        :param error_count: The error_count of this ApiDeleteReport.  # noqa: E501
        :type: int
        """

        self._error_count = error_count

    @property
    def error_details(self):
        """Gets the error_details of this ApiDeleteReport.  # noqa: E501


        :return: The error_details of this ApiDeleteReport.  # noqa: E501
        :rtype: list[ErrorDetail]
        """
        return self._error_details

    @error_details.setter
    def error_details(self, error_details):
        """Sets the error_details of this ApiDeleteReport.


        :param error_details: The error_details of this ApiDeleteReport.  # noqa: E501
        :type: list[ErrorDetail]
        """

        self._error_details = error_details

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApiDeleteReport, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiDeleteReport):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
