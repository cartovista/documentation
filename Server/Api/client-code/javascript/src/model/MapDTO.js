/*
 * CartoVista.Server.API.v1
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.17
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/KeywordDTO', 'model/PermissionPairComplexDTO', 'model/SpatialMetadataDTO'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./KeywordDTO'), require('./PermissionPairComplexDTO'), require('./SpatialMetadataDTO'));
  } else {
    // Browser globals (root is window)
    if (!root.CartoVistaserverapiv1) {
      root.CartoVistaserverapiv1 = {};
    }
    root.CartoVistaserverapiv1.MapDTO = factory(root.CartoVistaserverapiv1.ApiClient, root.CartoVistaserverapiv1.KeywordDTO, root.CartoVistaserverapiv1.PermissionPairComplexDTO, root.CartoVistaserverapiv1.SpatialMetadataDTO);
  }
}(this, function(ApiClient, KeywordDTO, PermissionPairComplexDTO, SpatialMetadataDTO) {
  'use strict';

  /**
   * The MapDTO model module.
   * @module model/MapDTO
   * @version v1
   */

  /**
   * Constructs a new <code>MapDTO</code>.
   * @alias module:model/MapDTO
   * @class
   */
  var exports = function() {
  };

  /**
   * Constructs a <code>MapDTO</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/MapDTO} obj Optional instance to populate.
   * @return {module:model/MapDTO} The populated <code>MapDTO</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('ConfigHTML5MapPathLocation'))
        obj.configHTML5MapPathLocation = ApiClient.convertToType(data['ConfigHTML5MapPathLocation'], 'String');
      if (data.hasOwnProperty('Title'))
        obj.title = ApiClient.convertToType(data['Title'], 'String');
      if (data.hasOwnProperty('Identifier'))
        obj.identifier = ApiClient.convertToType(data['Identifier'], 'String');
      if (data.hasOwnProperty('Description'))
        obj.description = ApiClient.convertToType(data['Description'], 'String');
      if (data.hasOwnProperty('Status'))
        obj.status = ApiClient.convertToType(data['Status'], 'Number');
      if (data.hasOwnProperty('Type'))
        obj.type = ApiClient.convertToType(data['Type'], 'Number');
      if (data.hasOwnProperty('TypeDescription'))
        obj.typeDescription = ApiClient.convertToType(data['TypeDescription'], 'String');
      if (data.hasOwnProperty('spatialMetaDataDTOs'))
        obj.spatialMetaDataDTOs = ApiClient.convertToType(data['spatialMetaDataDTOs'], [SpatialMetadataDTO]);
      if (data.hasOwnProperty('PublicAccess'))
        obj.publicAccess = ApiClient.convertToType(data['PublicAccess'], 'Boolean');
      if (data.hasOwnProperty('CustomViewer'))
        obj.customViewer = ApiClient.convertToType(data['CustomViewer'], 'Boolean');
      if (data.hasOwnProperty('OriginalMapPackageTimestamp'))
        obj.originalMapPackageTimestamp = ApiClient.convertToType(data['OriginalMapPackageTimestamp'], 'Date');
      if (data.hasOwnProperty('IsMapTerritoryReady'))
        obj.isMapTerritoryReady = ApiClient.convertToType(data['IsMapTerritoryReady'], 'Boolean');
      if (data.hasOwnProperty('ThumbnailVersion'))
        obj.thumbnailVersion = ApiClient.convertToType(data['ThumbnailVersion'], 'String');
      if (data.hasOwnProperty('FolderId'))
        obj.folderId = ApiClient.convertToType(data['FolderId'], 'String');
      if (data.hasOwnProperty('Path'))
        obj.path = ApiClient.convertToType(data['Path'], 'String');
      if (data.hasOwnProperty('Editable'))
        obj.editable = ApiClient.convertToType(data['Editable'], 'Boolean');
      if (data.hasOwnProperty('seoTitle'))
        obj.seoTitle = ApiClient.convertToType(data['seoTitle'], 'String');
      if (data.hasOwnProperty('seoDescription'))
        obj.seoDescription = ApiClient.convertToType(data['seoDescription'], 'String');
      if (data.hasOwnProperty('seoCustomHTML'))
        obj.seoCustomHTML = ApiClient.convertToType(data['seoCustomHTML'], 'String');
      if (data.hasOwnProperty('ScoringEnabled'))
        obj.scoringEnabled = ApiClient.convertToType(data['ScoringEnabled'], 'Boolean');
      if (data.hasOwnProperty('StoragePath'))
        obj.storagePath = ApiClient.convertToType(data['StoragePath'], 'String');
      if (data.hasOwnProperty('DynamicThumbnailURL'))
        obj.dynamicThumbnailURL = ApiClient.convertToType(data['DynamicThumbnailURL'], 'String');
      if (data.hasOwnProperty('ModifiedThumbnail'))
        obj.modifiedThumbnail = ApiClient.convertToType(data['ModifiedThumbnail'], 'Blob');
      if (data.hasOwnProperty('MapUrl'))
        obj.mapUrl = ApiClient.convertToType(data['MapUrl'], 'String');
      if (data.hasOwnProperty('LanguageDescription'))
        obj.languageDescription = ApiClient.convertToType(data['LanguageDescription'], 'String');
      if (data.hasOwnProperty('CreationTime'))
        obj.creationTime = ApiClient.convertToType(data['CreationTime'], 'Date');
      if (data.hasOwnProperty('LastModifiedAuthor'))
        obj.lastModifiedAuthor = ApiClient.convertToType(data['LastModifiedAuthor'], 'String');
      if (data.hasOwnProperty('LastModifiedTime'))
        obj.lastModifiedTime = ApiClient.convertToType(data['LastModifiedTime'], 'Date');
      if (data.hasOwnProperty('Keywords'))
        obj.keywords = ApiClient.convertToType(data['Keywords'], [KeywordDTO]);
      if (data.hasOwnProperty('OwnerName'))
        obj.ownerName = ApiClient.convertToType(data['OwnerName'], 'String');
      if (data.hasOwnProperty('Permissions'))
        obj.permissions = ApiClient.convertToType(data['Permissions'], [PermissionPairComplexDTO]);
      if (data.hasOwnProperty('CurrentUserHasModifyPermission'))
        obj.currentUserHasModifyPermission = ApiClient.convertToType(data['CurrentUserHasModifyPermission'], 'Boolean');
      if (data.hasOwnProperty('RepresentationUseCount'))
        obj.representationUseCount = ApiClient.convertToType(data['RepresentationUseCount'], 'Number');
      if (data.hasOwnProperty('WebApplicationPath'))
        obj.webApplicationPath = ApiClient.convertToType(data['WebApplicationPath'], 'String');
      if (data.hasOwnProperty('Id'))
        obj.id = ApiClient.convertToType(data['Id'], 'String');
    }
    return obj;
  }

  /**
   * @member {String} configHTML5MapPathLocation
   */
  exports.prototype.configHTML5MapPathLocation = undefined;

  /**
   * @member {String} title
   */
  exports.prototype.title = undefined;

  /**
   * @member {String} identifier
   */
  exports.prototype.identifier = undefined;

  /**
   * @member {String} description
   */
  exports.prototype.description = undefined;

  /**
   * @member {module:model/MapDTO.StatusEnum} status
   */
  exports.prototype.status = undefined;

  /**
   * @member {module:model/MapDTO.TypeEnum} type
   */
  exports.prototype.type = undefined;

  /**
   * @member {String} typeDescription
   */
  exports.prototype.typeDescription = undefined;

  /**
   * @member {Array.<module:model/SpatialMetadataDTO>} spatialMetaDataDTOs
   */
  exports.prototype.spatialMetaDataDTOs = undefined;

  /**
   * @member {Boolean} publicAccess
   */
  exports.prototype.publicAccess = undefined;

  /**
   * @member {Boolean} customViewer
   */
  exports.prototype.customViewer = undefined;

  /**
   * @member {Date} originalMapPackageTimestamp
   */
  exports.prototype.originalMapPackageTimestamp = undefined;

  /**
   * @member {Boolean} isMapTerritoryReady
   */
  exports.prototype.isMapTerritoryReady = undefined;

  /**
   * @member {String} thumbnailVersion
   */
  exports.prototype.thumbnailVersion = undefined;

  /**
   * @member {String} folderId
   */
  exports.prototype.folderId = undefined;

  /**
   * @member {String} path
   */
  exports.prototype.path = undefined;

  /**
   * @member {Boolean} editable
   */
  exports.prototype.editable = undefined;

  /**
   * @member {String} seoTitle
   */
  exports.prototype.seoTitle = undefined;

  /**
   * @member {String} seoDescription
   */
  exports.prototype.seoDescription = undefined;

  /**
   * @member {String} seoCustomHTML
   */
  exports.prototype.seoCustomHTML = undefined;

  /**
   * @member {Boolean} scoringEnabled
   */
  exports.prototype.scoringEnabled = undefined;

  /**
   * @member {String} storagePath
   */
  exports.prototype.storagePath = undefined;

  /**
   * @member {String} dynamicThumbnailURL
   */
  exports.prototype.dynamicThumbnailURL = undefined;

  /**
   * @member {Blob} modifiedThumbnail
   */
  exports.prototype.modifiedThumbnail = undefined;

  /**
   * @member {String} mapUrl
   */
  exports.prototype.mapUrl = undefined;

  /**
   * @member {String} languageDescription
   */
  exports.prototype.languageDescription = undefined;

  /**
   * @member {Date} creationTime
   */
  exports.prototype.creationTime = undefined;

  /**
   * @member {String} lastModifiedAuthor
   */
  exports.prototype.lastModifiedAuthor = undefined;

  /**
   * @member {Date} lastModifiedTime
   */
  exports.prototype.lastModifiedTime = undefined;

  /**
   * @member {Array.<module:model/KeywordDTO>} keywords
   */
  exports.prototype.keywords = undefined;

  /**
   * @member {String} ownerName
   */
  exports.prototype.ownerName = undefined;

  /**
   * @member {Array.<module:model/PermissionPairComplexDTO>} permissions
   */
  exports.prototype.permissions = undefined;

  /**
   * @member {Boolean} currentUserHasModifyPermission
   */
  exports.prototype.currentUserHasModifyPermission = undefined;

  /**
   * @member {Number} representationUseCount
   */
  exports.prototype.representationUseCount = undefined;

  /**
   * @member {String} webApplicationPath
   */
  exports.prototype.webApplicationPath = undefined;

  /**
   * @member {String} id
   */
  exports.prototype.id = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: 0
     * @const
     */
    _0: 0,

    /**
     * value: 1
     * @const
     */
    _1: 1,

    /**
     * value: 2
     * @const
     */
    _2: 2,

    /**
     * value: 3
     * @const
     */
    _3: 3,

    /**
     * value: 1000
     * @const
     */
    _1000: 1000
  };


  /**
   * Allowed values for the <code>type</code> property.
   * @enum {Number}
   * @readonly
   */
  exports.TypeEnum = {
    /**
     * value: 1
     * @const
     */
    _1: 1,

    /**
     * value: 2
     * @const
     */
    _2: 2
  };

  return exports;

}));
